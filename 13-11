import java.io.*;
import java.util.Scanner;
//----------------------------------------------------Geometric Object
 abstract class GeometricObject {
	
	protected GeometricObject() {}
	public abstract double getArea();
	public abstract double prmtr();
}
 
 //----------------------------------------------------Geometric Object
 
 //----------------------------------------------------Octagon
 
 class Octagon extends GeometricObject implements Cloneable, Comparable<Octagon> {
	 
	 private double side;
		public Octagon(double side) {
			this.side = side;	}
		
		
		public double getSide() {
			return side;	}
		
		public void setSide(double side) {
			this.side = side;	}
		
		public double getArea() {
			return (2 + 4 / Math.sqrt(2)) * side * side;	}
		public double prmtr() {
			return 8 * side;	}
		
		public int compareTo(Octagon o) {
			if (getArea() > o.getArea())
				return 1;
			else if (getArea() < o.getArea())
				return 2;
			else
				return 0;	}
		public Object clone() throws CloneNotSupportedException {
			return super.clone();	}
		
		public String toString() {
			return super.toString() + "\nArea: " + getArea() + "\nPerimeter: " + prmtr();	}
	}
 
 //----------------------------------------------------Octagon
 
 //----------------------------------------------------Geometric
 
public class Geometric {
	public static void main(String[] args) throws CloneNotSupportedException {
		Scanner input = new Scanner(System.in);
		System.out.print("Assuming all sides are equal, enter 1 side for an octagon: ");
		double side = input.nextDouble();
		
		Octagon oct1 = new Octagon(side);
		System.out.println("Area: " + oct1.getArea() + "\nPerimeter: " + oct1.prmtr());
		Octagon oct2 = (Octagon)oct1.clone();
		
		int result = (oct1.compareTo(oct2));
		if (result == 1)
			System.out.println("Octagon is greater than its clone.");
		
		if (result == 2)
			System.out.println("Octagon is lesser than its clone.");
		
		if (result == 0)
			System.out.println("Octagon is equal to its clone");
	}
	}
//----------------------------------------------------Geometric
